# Name the components on this agent
a1.sources = r1
a1.channels =c1 c2

# 配置sources # .+表示任意多个字符
a1.sources.r1.type = TAILDIR
a1.sources.r1.filegroups = f1
a1.sources.r1.filegroups.f1 = /tmp/logs/app-.+
a1.sources.r1.positionFile = /opt/module/flume-1.7.0/taildir_position.json

# 配置interceptor
a1.sources.r1.interceptors = i1 i2
a1.sources.r1.interceptors.i1.type = com.gtl.dw.flume.ETLInterceptor$Builder
a1.sources.r1.interceptors.i2.type = com.gtl.dw.flume.TypeInterceptor$Builder

# 配置selector
a1.sources.r1.selector.type = multiplexing
a1.sources.r1.selector.header = topic
a1.sources.r1.selector.mapping.topic_start = c1
a1.sources.r1.selector.mapping.topic_event = c2

# 配置channels
a1.channels.c1.type = org.apache.flume.channel.kafka.KafkaChannel
a1.channels.c1.kafka.topic = topic_start
a1.channels.c1.kafka.bootstrap.servers = hadoop222:9092,hadoop223:9092,hadoop224:9092
# parseAsFlumeEvent设置flase,表示不需要将event解析为flume event，因为event中包含headers和body，而只需要原始数据就可以。
a1.channels.c1.kafka.parseAsFlumeEvent = flase

a1.channels.c2.type = org.apache.flume.channel.kafka.KafkaChannel
a1.channels.c2.kafka.topic = topic_event
a1.channels.c2.kafka.bootstrap.servers = hadoop222:9092,hadoop223:9092,hadoop224:9092
# parseAsFlumeEvent设置flase,表示不需要将event解析为flume event，因为event中包含headers和body，而只需要原始数据就可以。
a1.channels.c2.kafka.parseAsFlumeEvent = flase

# 配置sinks


# 关联sources、channels、sinks
a1.sources.r1.channels = c1 c2